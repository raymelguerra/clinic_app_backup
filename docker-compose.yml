version: '3.4'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
  
  frontend:
    image: asomafrut_front:v1
    build: 
      context: .
      dockerfile: ClinicApp.FrontEnd/Dockerfile
    ports:
      - "80"
    environment:
      - VIRTUAL_HOST=migration.abaanalystgroup.live,www.migration.abaanalystgroup.live
      - LETSENCRYPT_HOST=migration.abaanalystgroup.live,www.migration.abaanalystgroup.live
      - LETSENCRYPT_EMAIL=raymelguerra@gmail.com
    depends_on:
      - clinicapp.backend.proxy
      - nginx-proxy
      - letsencrypt
    
  clinicapp.backend.proxy:
    image: nginx:latest
    ports:
      - 88:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
    - clinicapp.authorizationandusermanager
    - clinicapp.infrastructure
    - clinicapp.client
    - clinicapp.servicelog
    - clinicapp.contractor

  clinicapp.authorizationandusermanager:
    image: authorizationandusermanager:v1.2
    build:
      context: .
      dockerfile: ClinicApp.AuthorizationAndUserManager/Dockerfile
    restart: always
    expose:
       - 80
       - 443
    environment: 
       - ASPNETCORE_ENVIRONMENT=Development
       - ConnectionStrings__ClinicbdMigrationContext="Host=lin-13704-4133-pgsql-primary.servers.linodedb.net;Database=aba_test;Username=linpostgres;Password=HxywGpAs2-2CnbGh"
  clinicapp.client:
    image: client:v1.2
    build:
      context: .
      dockerfile: ClinicApp.Client/Dockerfile
    restart: always
    expose:
       - 80
       - 443
    environment: 
       - ASPNETCORE_ENVIRONMENT=Development
       - ConnectionStrings__ClinicbdMigrationContext="Host=lin-13704-4133-pgsql-primary.servers.linodedb.net;Database=aba_test;Username=linpostgres;Password=HxywGpAs2-2CnbGh"
  clinicapp.contractor:
    image: contractor:v1.2
    build:
      context: .
      dockerfile: ClinicApp.Contractor/Dockerfile
    restart: always
    expose:
       - 80
       - 443
    environment: 
       - ASPNETCORE_ENVIRONMENT=Development
       - ConnectionStrings__ClinicbdMigrationContext="Host=lin-13704-4133-pgsql-primary.servers.linodedb.net;Database=aba_test;Username=linpostgres;Password=HxywGpAs2-2CnbGh"
   # volumes:
   #   - ./conf_summary/appsettings.json:/app/appsettings.json
  clinicapp.infrastructure:
    image: infrastructure:v1.2
    build:
      context: .
      dockerfile: ClinicApp.MSInfrastructure/Dockerfile
    restart: always
    expose:
       - 80
       - 443
    environment: 
       - ASPNETCORE_ENVIRONMENT=Development
       - ConnectionStrings__ClinicbdMigrationContext="Host=lin-13704-4133-pgsql-primary.servers.linodedb.net;Database=aba_test;Username=linpostgres;Password=HxywGpAs2-2CnbGh"
  clinicapp.servicelog:
    image: servicelog:v1.2
    build:
      context: .
      dockerfile: ClinicApp.ServiceLog/Dockerfile
    restart: always
    expose:
       - 80
       - 443
    environment: 
       - ASPNETCORE_ENVIRONMENT=Development
       - ConnectionStrings__ClinicbdMigrationContext="Host=lin-13704-4133-pgsql-primary.servers.linodedb.net;Database=aba_test;Username=linpostgres;Password=HxywGpAs2-2CnbGh"

# networks:
#     clinicapp.network:
#         driver: