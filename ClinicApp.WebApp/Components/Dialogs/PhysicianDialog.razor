@using ClinicApp.Core.Models

<MudDialog>
    <DialogContent>
        <MudForm Model="@Model" @ref="@form" Validation="@(phyValidator.ValidateValue)" ValidationDelay="0">
            @* <MudPaper Class="pa-4" Elevation="0"> *@
            <MudGrid Spacing="2">
                <MudItem xs="12" sm="6" xl="4">
                    <MudTextField @bind-Value="Model.Name"
                                  For="@(() => Model.Name)"
                                  Immediate="true"
                                  Variant="Variant.Outlined"
                                  Label="Name" />
                </MudItem>
                <MudItem xs="12" sm="6" xl="4">
                    <MudTextField @bind-Value="Model.RenderingProvider"
                                  For="@(() => Model.RenderingProvider)"
                                  Immediate="true"
                                  Variant="Variant.Outlined"
                                  Label="Rendering Provider" />
                </MudItem>
                <MudItem xs="12" sm="6" xl="4">
                    <MudTextField @bind-Value="Model.Extra"
                                  For="@(() => Model.Extra)"
                                  Immediate="true"
                                  Variant="Variant.Outlined"
                                  Label="Associated" />
                </MudItem>
            </MudGrid>
            @* </MudPaper> *@
            <MudGrid Class="mt-2">
                <MudItem xs="12" sm="12" xl="12">
                    <MudTable Items="@Model.Payrolls"
                              Dense="true"
                              Hover="true"
                              CanCancelEdit="true"
                              Breakpoint="Breakpoint.Sm"
                              Height="140px"
                              HorizontalScrollbar="true"
                              @bind-SelectedItem="SelectedItem"
                              CommitEditTooltip="Commit Edit"
                              CancelEditTooltip="Cancel Edit"
                              RowEditPreview="BackupItem"
                              RowEditCancel="ResetItemToOriginalValues"
                              IsEditRowSwitchingBlocked="false"
                              ApplyButtonPosition="TableApplyButtonPosition.End"
                              EditButtonPosition="TableEditButtonPosition.End"
                              RowEditCommit="ItemHasBeenCommitted"
                              EditTrigger="TableEditTrigger.EditButton">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">Payrolls</MudText>
                            <MudSpacer />
                            <MudIconButton Icon="@Icons.Material.Filled.Add" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Medium" OnClick="AddRow" Disabled="HaveNewAgreement()" />
                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh>Insurance</MudTh>
                            <MudTh>Contractor Type</MudTh>
                            <MudTh>Procedure</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Insurance"> @(context.InsuranceProcedure != null && context.InsuranceProcedure.Insurance != null ? context.InsuranceProcedure.Insurance.Name : string.Empty)</MudTd>
                            <MudTd DataLabel="ContractorType">@(context.ContractorType != null ? context.ContractorType.Name : string.Empty)</MudTd>
                            <MudTd DataLabel="Procedure">@(context.InsuranceProcedure != null && context.InsuranceProcedure.Procedure != null ? context.InsuranceProcedure.Procedure.Name : string.Empty)</MudTd>
                        </RowTemplate>
                        <RowEditingTemplate>
                            <MudTd DataLabel="Insurance">
                                <MudSelect For="@(() => context.InsuranceProcedure.Insurance)" @bind-Value="context.InsuranceProcedure.Insurance" ToStringFunc="@converter" Label="Insurance" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" Validation="@prValidator.ValidateValue" TextChanged="OnInsuranceChanged">
                                    @*TextChanged="@(x=> OnInsuranceChanged(x))"*@
                                    @if (_insurances == null || _insurances.Count() == 0)
                                    {
                                        <MudSelectItem T="Insurance" Value="null">No matching records found</MudSelectItem>
                                    }
                                    else
                                    {
                                        @foreach (var ins in _insurances)
                                        {
                                            <MudSelectItem Value="@ins" />
                                        }
                                    }
                                </MudSelect>
                            </MudTd>
                            <MudTd DataLabel="ContractorType">
                                <MudSelect @ref="selectCtrType" For="@(() => context.ContractorType)" @bind-Value="context.ContractorType" ToStringFunc="@converter" Label="Contractor Type" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" Validation="@prValidator.ValidateValue" TextChanged="OnContractorTypeChanged">
                                    @*TextChanged="@(x=> OnContractorTypeChanged(x))"*@
                                    @if (_contractorTypes == null || _contractorTypes.Count() == 0 || context.InsuranceProcedure.Insurance == default(Insurance))
                                    {
                                        <MudSelectItem T="ContractorType" Value="null">No matching records found</MudSelectItem>
                                    }
                                    else
                                    {
                                        @foreach (var ctr in _contractorTypes)
                                        {
                                            <MudSelectItem Value="@ctr" />
                                        }
                                    }
                                </MudSelect>
                            </MudTd>
                            <MudTd DataLabel="Procedure">
                                <MudSelect @ref="selProc" For="@(() => context.InsuranceProcedure.Procedure)" @bind-Value="context.InsuranceProcedure.Procedure" ToStringFunc="@converter" Label="Procedure" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" Validation="@prValidator.ValidateValue">
                                    @if (_procValids == null || _procValids.Count() == 0 || (context.ContractorType == default(ContractorType) || context.InsuranceProcedure.Insurance == default(Insurance)))
                                    {
                                        <MudSelectItem T="Procedure" Value="null">No matching records found</MudSelectItem>
                                    }
                                    else
                                    {
                                        @foreach (var pro in _procValids)
                                        {
                                            <MudSelectItem Value="@pro" />
                                        }
                                    }
                                </MudSelect>
                            </MudTd>
                        </RowEditingTemplate>
                        <PagerContent>
                            <MudTablePager />
                        </PagerContent>
                        <EditButtonContent Context="button">
                            <MudGrid Spacing="2" Justify="Justify.FlexEnd">
                                <MudItem sm="6" md="6" lg="6">
                                    <MudIconButton Title="Edit" Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" Class="pa-0" Color="Color.Info" OnClick="@button.ButtonAction" Disabled="@button.ButtonDisabled" />
                                </MudItem>
                                <MudItem sm="6" md="6" lg="6">
                                    <MudIconButton Title="Delete" Size="@Size.Small" Icon="@Icons.Material.Outlined.Delete" Color="Color.Error" Class="pa-0" OnClick="@(() => DeleteItem(button.Item))" Disabled="@button.ButtonDisabled" />
                                </MudItem>
                            </MudGrid>
                        </EditButtonContent>
                    </MudTable>
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
        <MudButton OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>