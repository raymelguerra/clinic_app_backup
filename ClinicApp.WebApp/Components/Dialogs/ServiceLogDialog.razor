@using ClinicApp.Core.Models

<MudDialog>
    <DialogContent>
        <MudForm Model="@Model" @ref="@form" Validation="@(slValidator.ValidateValue)" ValidationDelay="0">
            <MudGrid Spacing="2">
                <MudItem xs="12" sm="6" xl="4">
                    <MudSelect @bind-Value="Model.Insurance" For="@(() => Model.Insurance)" ToStringFunc="@converter" Label="Insurance" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" TextChanged="OnInsuranceChanged" Disabled="@(!MudDialog!.Title.Contains("Add"))">
                        @if (_insurances == null || _insurances.Count() == 0)
                        {
                            <MudSelectItem T="Insurance" Value="null">No matching records found</MudSelectItem>
                        }
                        else
                        {
                            @foreach (var ins in _insurances)
                            {
                                <MudSelectItem Value="@ins" />
                            }
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="12" sm="6" xl="4">
                    <MudAutocomplete @ref="selContractor" For="@(() => Model.Contractor)" Variant="Variant.Outlined" T="Contractor" Label="Physician" SearchFunc="@SearchContractor" CoerceText="false" ToStringFunc="@converter" DebounceInterval=100 @bind-Value="Model.Contractor"
                                     Disabled="@(!MudDialog!.Title.Contains("Add"))" TextChanged="OnContractorChanged" />
                </MudItem>
                <MudItem xs="12" sm="6" xl="4">
                    <MudAutocomplete @ref="selClient" For="@(() => Model.Client)" Variant="Variant.Outlined" T="Client" Label="Patient" SearchFunc="@SearchClient" CoerceText="false" ToStringFunc="@converter" DebounceInterval=100 @bind-Value="Model.Client"
                                     Disabled="@(!MudDialog!.Title.Contains("Add"))" />
                </MudItem>
                <MudItem xs="12" sm="6" xl="4">
                    <MudSelect @bind-Value="Model.Period" For="@(() => Model.Period)" ToStringFunc="@converterPeriod" Label="Period" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" Disabled="@(!MudDialog!.Title.Contains("Add"))">
                        @if (_periods == null || _periods.Count() == 0)
                        {
                            <MudSelectItem T="Period" Value="null">No matching records found</MudSelectItem>
                        }
                        else
                        {
                            @foreach (var perd in _periods)
                            {
                                <MudSelectItem Value="@perd" />
                            }
                        }
                    </MudSelect>
                </MudItem>
                <MudItem hidden="@MudDialog!.Title!.Contains("Add")" xs="12" sm="12" xl="12">
                    <MudTextField @bind-Value="Model.Pending" T="string" Counter="250" MaxLength="250" Immediate="true" Validation="@(new Func<string, IEnumerable<string>>(MaxCharacters))" Label="Pending" Variant="Variant.Outlined" Clearable="true" />
                </MudItem>
            </MudGrid>
            <MudGrid Class="mt-2">
                <MudItem xs="12" sm="12" xl="12">
                    <MudTable Items="@Model.UnitDetails"
                              Dense="true"
                              Hover="true"
                              ReadOnly="false"
                              CanCancelEdit="true"
                              Breakpoint="Breakpoint.Sm"
                              HorizontalScrollbar="true"
                              @bind-SelectedItem="SelectedItem"
                              CommitEditTooltip="Commit Edit"
                              CancelEditTooltip="Cancel Edit"
                              RowEditPreview="BackupItem"
                              RowEditCancel="ResetItemToOriginalValues"
                              RowEditCommit="ItemHasBeenCommitted"
                              IsEditRowSwitchingBlocked="false"
                              ApplyButtonPosition="TableApplyButtonPosition.End"
                              EditButtonPosition="TableEditButtonPosition.End"
                              EditTrigger="TableEditTrigger.EditButton">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">Unit Details</MudText>
                            <MudSpacer />
                            <MudIconButton Icon="@Icons.Material.Filled.Add" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Medium" OnClick="AddRow" />
                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh>Date of service</MudTh>
                            <MudTh>Unit</MudTh>
                            <MudTh>Place of service</MudTh>
                            <MudTh>Procedure</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="DateOfService">@(context.DateOfService?.ToString("MM-dd-yyyy"))</MudTd>
                            <MudTd DataLabel="Unit"> @context.Unit</MudTd>
                            <MudTd DataLabel="PlaceOfService">@(context.PlaceOfService != null ? context.PlaceOfService.Name : string.Empty)</MudTd>
                            <MudTd DataLabel="Procedure">@(context.Procedure != null ? context.Procedure.Name : string.Empty)</MudTd>
                        </RowTemplate>
                        <RowEditingTemplate>
                            <MudTd DataLabel="DateOfService">
                                <MudDatePicker Immediate="true" For="@(() => context.DateOfService)" PickerVariant="PickerVariant.Dialog"
                                               Variant="Variant.Outlined" @bind-Date="context.DateOfService"
                                               Label="Date Created" Validation="@udValidator.ValidateValue" />
                            </MudTd>
                            <MudTd DataLabel="Unit">
                                <MudNumericField For="() => context.Unit" Label="Unit" Validation="@udValidator.ValidateValue" @bind-Value="context.Unit" Variant="Variant.Outlined" />
                            </MudTd>
                            <MudTd DataLabel="PlaceOfService">
                                <MudSelect For="@(() => context.PlaceOfService)" @bind-Value="context.PlaceOfService" ToStringFunc="@converter" Label="Place of Service" Validation="@udValidator.ValidateValue" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">

                                    @if (_placeOfService == null || _placeOfService.Count() == 0)
                                    {
                                        <MudSelectItem T="PlaceOfService" Value="null">No matching records found</MudSelectItem>
                                    }
                                    else
                                    {
                                        @foreach (var plOfServ in _placeOfService)
                                        {
                                            <MudSelectItem Value="@plOfServ" />
                                        }
                                    }
                                </MudSelect>
                            </MudTd>
                            <MudTd DataLabel="Procedure">
                                <MudSelect For="@(() => context.Procedure)" @bind-Value="context.Procedure" ToStringFunc="@converter" Label="Procedure" Variant="Variant.Outlined" Validation="@udValidator.ValidateValue" AnchorOrigin="Origin.BottomCenter">

                                    @if (Model.Client == null || Model.Client.Agreements == null || Model.Client.Agreements.Count() == 0)
                                    {
                                        <MudSelectItem T="Procedure" Value="null">No matching records found</MudSelectItem>
                                    }
                                    else
                                    {
                                        @foreach (var proc in _getProceduresByAgreements(Model.Client.Agreements))
                                        {
                                            <MudSelectItem Value="@proc" />
                                        }
                                    }
                                </MudSelect>
                            </MudTd>
                        </RowEditingTemplate>
                        <PagerContent>
                            <MudTablePager />
                        </PagerContent>
                        <EditButtonContent Context="button">
                            <MudGrid Spacing="2" Justify="Justify.FlexEnd">
                                <MudItem sm="6" md="6" lg="6">
                                    <MudIconButton Title="Edit" Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" Class="pa-0" Color="Color.Info" OnClick="@button.ButtonAction" Disabled="@button.ButtonDisabled" />
                                </MudItem>
                                <MudItem sm="6" md="6" lg="6">
                                    <MudIconButton Title="Delete" Size="@Size.Small" Icon="@Icons.Material.Outlined.Delete" Color="Color.Error" Class="pa-0" Disabled="@button.ButtonDisabled" OnClick="@(() => DeleteItem(button.Item))" />
                                </MudItem>
                            </MudGrid>
                        </EditButtonContent>

                    </MudTable>
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudGrid Spacing="1" Justify="Justify.SpaceBetween">
            <MudItem hidden="@(!MudDialog!.Title!.Contains("Add"))">
                <MudGrid>
                    <MudItem>
                        <MudButtonGroup Color="Color.Primary" OverrideStyles="false">
                            <MudFileUpload T="IBrowserFile" Accept=".csv" FilesChanged="UploadFiles">
                                <ActivatorContent>
                                    <MudButton Variant="Variant.Filled" Disabled="@(_files.Count() > 0)"
                                               Color="Color.Default">
                                        Upload File
                                    </MudButton>
                                </ActivatorContent>
                            </MudFileUpload>
                            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.DeleteOutline" Color="Color.Error" Disabled="@(_files.Count() == 0)" OnClick="() => _files = new List<IBrowserFile>()"></MudButton>
                            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.DriveFolderUpload" Color="Color.Primary" Disabled="@(_files.Count() == 0)"></MudButton>
                        </MudButtonGroup>
                    </MudItem>
                </MudGrid>
                <MudGrid>
                    <MudItem>
                        <MudList T="string" Style="mt-4">
                            <MudListItem>
                                @if (_files.Count() > 0)
                                {
                                    <b>@_files[0].Name</b> <code>@_files[0].Size bytes</code>
                                }
                                else
                                {
                                    @("if you want to upload a file, please click the button above")
                                }
                            </MudListItem>
                        </MudList>
                        <MudInputLabel>

                        </MudInputLabel>
                    </MudItem>
                </MudGrid>
            </MudItem>
            <MudItem>
                <MudButton Color="Color.Primary" OnClick="Submit">Save</MudButton>
                <MudButton OnClick="Cancel">Cancel</MudButton>
            </MudItem>
        </MudGrid>
    </DialogActions>
</MudDialog>
